{"version":3,"file":"js/286.chunk.e939f434.js","mappings":";sFAMAA,IAA0B,EAS1B,KAT0B,EAS1B,WACA,OAAgB,WACT,IAAIC,EAAoB,CAE/B,MACM,SAASC,EAAE,KAEjB,aAGA,IAACC,EAASC,EAAO,OACjB,GACA,+FACC,mBAAe,oDAChB,+CACC,MAAK,wBACL,oCACD,yCACA,kIACA,2BACA,UAAM,+OACL,sBAAiB,oBAClB,iBAAO,eACL,4CACF,4CACC,sBAAwB,oBACzB,0CACA,0CACC,qBAAgB,mBACf,sBAAoB,oBACtB,qBAAqB,mBACrB,qBAAe,mBACf,sBAAqB,oBACrB,qBAAmB,mBACnB,sBAAK,oBACL,iBAAG,mCACD,oDACF,aAAM,+NACJ,qCAAW,4LACX,yCAAiB,aACjB,mBAAU,qIACZ,iBAAgB,wHAChB,qBAAI,6BACF,kHACF,sCACC,qCAAW,gEACX,qFACD,4TACA,oFACA,4LACA,uBAAyB,ihBACxB,mBAAkB,uQACnB,oJACC,0BAAyB,mDAE1B,IAAE,YACF,oGACAD,EAAAA,aAAAA,EAAAA,EAAAA,GACA,CAEA,EAEK,MACCE,SAAQC,EAAI,EAA0BF,GAE5C,aAGAE,EAAG,gBAED,EAEA,MACF,gBAEA,aAGAA,EAAAA,QAAAA,EAAAA,MAEA,EAEA,MAAO,WAAa,KAEpB,aAGAA,EAAE,QAAW,QAEb,EAEA,KACM,SAAQA,EAASC,EAAAA,GAEvB,aAGAD,EAAE,QAAS,QAET,EAEA,MACA,SAAUA,EAAAA,EAA0B,GAEtC,aAGAA,EAAOE,QAAE,QAEN,EAEH,MACK,SAASF,EAAK,EAA+BF,GAElD,aAGAE,EAAOE,QAAM,EAAY,MAEvB,EAEI,MACJ,SAAaF,EAAAA,EAAa,GAE5B,aAGAA,EAAE,QAAcF,EAAAA,MAEd,EAEF,MACA,gBAEA,aAGAE,EAAOE,QAAQJ,EAAM,MAEnB,EAEA,MACA,gBAEF,aAGAE,EAAOE,QAAC,EAAyB,MAE3B,EAEJ,MACK,SAAQF,EAAE,KAEjB,aAGAA,EAAOE,QAASJ,EAAiB,MAEjC,EAEE,MACK,SAAQE,EAASC,EAAO,GAE/B,aAGAD,EAAAA,QAAAA,EAAAA,MAEG,EAED,MACF,gBAEA,aAGAA,EAAE,QAAaF,EAAsB,MAErC,EAEE,MACA,gBAEF,aAGAE,EAAG,QAAaF,EAAiB,KAE9B,EAEH,MACG,SAAaE,EAAG,EAAiB,GAEpC,aAGAA,EAAM,QAASF,EAAO,MAEtB,EAEM,MACD,SAAOE,EAAM,EAAU,GAE5B,aAGAA,EAAOE,QAASJ,EAAE,MAEZC,EAEH,MACI,SAAOC,EAASG,EAAe,GAEtC,aAGAH,EAAOE,QAAO,EAAqB,MAEhC,EAEE,MACE,SAASF,EAAQC,EAA0BH,GAElD,aAGAE,EAAK,QAAK,EAAY,MAEhB,EAED,MACL,gBAEA,aAGAA,EAAOE,QAAO,EAAsB,MAEpC,EAAe,MAAK,gBACpB,aAGAF,EAAM,QAASF,EAAa,MAEtB,EAED,MACL,gBAEA,aAGAE,EAAM,QAASF,EAAsB,KAE/B,EAEF,MACJ,gBAEA,aAGAE,EAAOE,QAAE,EAAkB,MAE3B,EAEI,MACA,gBAEJ,aAGAF,EAAAA,QAAAA,EAAAA,MAEC,EAED,MACA,+CAGM,EAEA,MACA,SAAQA,EAAAA,EAAAA,GAEd,eAEU,gBACN,EAEJ,MACA,SAAgBA,EAAI,EAAQ,GAE5B,aACAA,EAAII,QAASA,EAAW,MAElB,EAEH,MACH,SAAOJ,EAAOC,EAAa,GAE3B,aAGA,eACAI,EAAAA,SAAAA,CAEAP,EAAgB,OAAU,EAAY,wZAEtCA,EAAkB,OAAUA,EAAgB,OAAM,EAAgB,gBAElEA,EAAmB,SACnBE,EAAM,QAASK,CAET,EAEL,MACA,gBAED,aAGAL,EAAOE,QAAUJ,EAAmB,MAE9B,EAEN,MACC,SAAUE,EAAAA,EAAAA,GAEX,aAGAA,EAAAA,QAAiBF,EAAa,MAEzB,EAEA,MACC,SAAUE,EAAC,KAEjB,aAGAA,EAAM,QAAUF,EAAQ,MAElB,EAEA,MACA,SAAUE,EAAAA,EAAAA,GAEhB,aAGAA,EAAAA,QAAAA,EAAAA,MAEM,EAEA,MACA,SAAUA,EAAC,KAEjB,aAGAA,EAAE,gBAEI,EAEA,MACA,SAAUA,EAAQC,EAAO,GAE/B,aAGAD,EAAAA,QAAAA,EAAAA,MAEA,EAEM,MACA,gBAEN,0lm6GA3XA,IARAN,EAAU,QAAWY,sCCCrB,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAiB,CAC1B,SAASC,IAA0B,CACnCA,EAAuBC,kBAAoBF,EAE3CT,EAAOE,QAAU,WACf,SAASU,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWX,EAAf,CAIA,IAAIY,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPN,CAQF,CAEA,SAASG,IACP,OAAOV,CACT,CAHAA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,OAAQd,EACRe,KAAMf,EACNgB,KAAMhB,EACNiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EACRoB,OAAQpB,EAERqB,IAAKrB,EACLsB,QAASZ,EACTa,QAASvB,EACTwB,YAAaxB,EACbyB,WAAYf,EACZgB,KAAM1B,EACN2B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAeqB,UAAYrB,EAEpBA,CACT,wBC/CExB,EAAOE,QAAUM,EAAQ,IAARA,kCCNnBR,EAAOE,QAFoB,sXC4CZ,SAA8BG,GAAQ,IAC7CyC,EAD6C,gPAAAC,CAAAA,EAAAA,GAAA,4aAEjD,WAAYlC,GAAO,yGAAAmC,CAAAA,KAAAA,IACjBC,EAAAA,EAAAA,KAAAA,KAAMpC,IAEDqC,EAAIC,QAAQC,UACjBH,EAAKI,cAAgB,KACrBJ,EAAKK,SAAW,CAAC,EAEjBL,EAAKM,iBAAmBN,EAAKM,iBAAiBC,KAAtB,MACxBP,EAAKQ,kBAAoBR,EAAKQ,kBAAkBD,KAAvB,MACzBP,EAAKS,mBAAqBT,EAAKS,mBAAmBF,KAAxB,MAC1BP,EAAKU,OAASV,EAAKU,OAAOH,KAAZ,MACdP,EAAKW,aAAeX,EAAKW,aAAaJ,KAAlB,MACpBP,EAAKY,eAAiBZ,EAAKY,eAAeL,KAApB,MACtBP,EAAKa,aAAeb,EAAKa,aAAaN,KAAlB,MAbH,CAclB,CAhBgD,qDAAAO,CAAAA,EAAAA,CAAAA,CAAAC,IAAAA,eAAAC,MAAAA,SAkBpCC,EAA2BC,EAAwBC,GAA0B,WACxFC,KAAKnB,EAAImB,KAAKnB,EACXoB,MAAK,WACJ,IAAIC,EAAKC,WAAT,CAGA,IAAKD,EAAKE,GACR,MAAM,IAAIrD,MAAM,6BAGlB,OAAOf,EAAOqE,MAAMH,EAAKE,GAAI,CAC3BE,KAAMJ,EAAK1D,MAAM8D,KACjBC,OAAQL,EAAK1D,MAAM+D,OACnBC,OAAQN,EAAK1D,MAAMgE,OACnBC,OAAQP,EAAK1D,MAAMiE,QATpB,CAWF,IACAR,MAAK,WACAC,EAAKC,aAGTD,EAAKhB,iBAAiBW,GACtBK,EAAKd,oBACLc,EAAKV,eAAeM,GAChBC,GACFG,EAAKb,qBAER,IA1BM,OA2BA,SAACvC,GACFoD,EAAK1D,MAAMkE,SACbR,EAAK1D,MAAMkE,QAAQ5D,EAEtB,GACJ,GAnDgD,CAAA6C,IAAAA,oBAAAC,MAAAA,WAsD/CI,KAAKG,YAAa,EAElBH,KAAKP,cAAa,EAAMO,KAAKxD,MAAMmE,eAAe,EACnD,GAzDgD,CAAAhB,IAAAA,qBAAAC,MAAAA,SA2D9BgB,GACjBZ,KAAKG,YAAa,EAGlB,IAAMU,EACJD,EAAUH,QAAUG,EAAUH,OAAOK,OAASF,EAAUH,OAAOK,OAAS,EACpEC,EACJf,KAAKxD,MAAMiE,QAAUT,KAAKxD,MAAMiE,OAAOK,OAASd,KAAKxD,MAAMiE,OAAOK,OAAS,EAEvEE,IACJJ,EAAUL,SAAWP,KAAKxD,MAAM+D,QAChCK,EAAUN,OAASN,KAAKxD,MAAM8D,MAC9BM,EAAUJ,SAAWR,KAAKxD,MAAMgE,QAChCO,IAAkBF,GAEdI,OAAyC,IAAvBL,EAAUM,SAC5BC,EAAkBP,EAAUM,WAAalB,KAAKxD,MAAM0E,UAErDF,GAAmBC,KAAoBA,GAAoBE,KAIhEnB,KAAKP,cAAa,EAAOO,KAAKxD,MAAM4E,UAAU,EAC/C,GAlFgD,CAAAzB,IAAAA,uBAAAC,MAAAA,WAqF/CI,KAAKG,YAAa,EAElBH,KAAKR,eAAeQ,KAAKxD,MAAM6E,SAE3BrB,KAAKhB,eAAiBsC,IACxBC,OAAOC,oBAAoB,SAAUxB,KAAKhB,eAC1CgB,KAAKhB,cAAgB,MAGvBgB,KAAKyB,qBAELzF,EAAO0F,MAAM1B,KAAKI,GACnB,GAjGgD,CAAAT,IAAAA,qBAAAC,MAAAA,WAmG5B,WACdI,KAAKI,IAAOJ,KAAKI,GAAGuB,gBAIzBC,EAAaC,SAAQ,SAACC,GACpBC,EAAK3B,GAAG4B,GAAGF,EAAaC,EAAKxC,aAC9B,GACF,GA3GgD,CAAAI,IAAAA,qBAAAC,MAAAA,WA6G5B,WACdI,KAAKI,IAAOJ,KAAKI,GAAGuB,gBAIzBC,EAAaC,SAAQ,SAACC,GACpBG,EAAK7B,GAAGuB,eAAeG,EAAaG,EAAK1C,aAC1C,GACF,GArHgD,CAAAI,IAAAA,eAAAC,MAAAA,WAwH/CI,KAAKR,eAAeQ,KAAKxD,MAAM4E,SAChC,GAzHgD,CAAAzB,IAAAA,iBAAAC,MAAAA,SA2HlCsC,GACb,GAAwB,oBAAbA,EAAyB,OACXlC,KAAKI,GAG5B8B,EADe,CAAC5B,KAHkB,EAC3BA,KAEeC,OAHY,EACrBA,OAEiBE,OADfT,KAAKI,GAAG+B,gBAAkBnC,KAAKI,GAAG+B,gBAAgBC,QAAU,MAE1DpC,KAAKI,GACvB,CACF,GAlIgD,CAAAT,IAAAA,mBAAAC,MAAAA,SAoIhCyC,GAAQ,WAClBf,IAIDtB,KAAKxD,MAAM8F,mBAAqBtC,KAAKhB,eACvCgB,KAAKhB,cAAgB,kBAAMhD,EAAOuG,MAAMC,OAAOC,EAAKrC,GAA/B,EACrBmB,OAAOmB,iBAAiB,SAAU1C,KAAKhB,eACnCqD,GACFrC,KAAKhB,kBAEGgB,KAAKxD,MAAM8F,kBAAoBtC,KAAKhB,gBAC9CuC,OAAOC,oBAAoB,SAAUxB,KAAKhB,eAC1CgB,KAAKhB,cAAgB,MAExB,GAnJgD,CAAAW,IAAAA,SAAAC,MAAAA,SAqJ1CQ,GACLJ,KAAKI,GAAKA,EAENJ,KAAKxD,MAAMmG,OAASrB,IACtBC,OAAOqB,GAAK5C,KAAKI,GAEpB,GA3JgD,CAAAT,IAAAA,oBAAAC,MAAAA,WA8J7B,WAClBiD,EAAWhB,SAAQ,SAACiB,GAClB,IAAMC,EAAOC,EAAKxG,MAAM,KAAOsG,GACzBG,EAAUD,EAAK/D,SAAS6D,GACxBI,EAAaC,QAAQF,GAEvBF,IAASG,EACXF,EAAKI,gBAAgBN,EAAWC,IACtBA,GAAQG,EAElBF,EAAKK,mBAAmBP,GACfC,GAAQG,GAAcH,IAASE,IAExCD,EAAKK,mBAAmBP,GACxBE,EAAKI,gBAAgBN,EAAWC,GAEnC,GACF,GA/KgD,CAAApD,IAAAA,kBAAAC,MAAAA,SAiLjCkD,EAAWC,GACzB/C,KAAKf,SAAS6D,GAAaC,EAC3B/C,KAAKI,GAAG4B,GAAGhC,KAAKsD,mBAAmBR,GAAY9C,KAAKf,SAAS6D,GAC9D,GApLgD,CAAAnD,IAAAA,qBAAAC,MAAAA,SAsL9BkD,GACjB9C,KAAKI,GAAGuB,eAAe3B,KAAKsD,mBAAmBR,GAAY9C,KAAKf,SAAS6D,WAClE9C,KAAKf,SAAS6D,EACtB,GAzLgD,CAAAnD,IAAAA,qBAAAC,MAAAA,SA2L9BkD,GACjB,MAAO,UAAYA,EAAUS,aAC9B,GA7LgD,CAAA5D,IAAAA,SAAAC,MAAAA,WAgM/C,OACE4D,EAAAA,QAAAA,cAAAA,MAAAA,CACEC,GAAIzD,KAAKxD,MAAMkH,MACfC,MAAO3D,KAAKxD,MAAMmH,MAClBC,IAAK5D,KAAKV,OACVuE,UAAW7D,KAAKxD,MAAMqH,WAG3B,KAxMgD,GACrBC,EAAAA,WAsO9B,OA5BArF,EAAgBsF,UAAY,CAC1BzD,KAAM9B,EAAAA,QAAUX,QAAQW,EAAAA,QAAUf,QAClC+C,OAAQhC,EAAAA,QAAUf,OAClB8C,OAAQ/B,EAAAA,QAAUf,OAClBgD,OAAQjC,EAAAA,QAAUX,QAAQW,EAAAA,QAAUf,QACpCyD,SAAU1C,EAAAA,QAAUhB,OACpBmD,cAAenC,EAAAA,QAAUjB,KACzB8D,QAAS7C,EAAAA,QAAUjB,KACnBmD,QAASlC,EAAAA,QAAUjB,KACnB6D,SAAU5C,EAAAA,QAAUjB,KACpBoF,MAAOnE,EAAAA,QAAUlB,KACjBqG,MAAOnF,EAAAA,QAAUf,OACjBoG,UAAWrF,EAAAA,QAAUd,OACrB4E,iBAAkB9D,EAAAA,QAAUlB,KAC5BoG,MAAOlF,EAAAA,QAAUd,QAGnBmF,EAAWhB,SAAQ,SAACiB,GAClBrE,EAAgBsF,UAAU,KAAOjB,GAAatE,EAAAA,QAAUjB,IACzD,IAEDkB,EAAgBuF,aAAe,CAC7BrB,OAAO,EACPL,kBAAkB,EAClBhC,KAAM,GACNqD,MAAO,CAACM,SAAU,WAAYC,QAAS,iBAGlCzF,CACR,EA7RD,sbACA,4tBAKA,IAAMoE,EAAa,CACjB,cACA,YACA,WACA,iBACA,uBACA,WACA,eACA,cACA,gBACA,QACA,kBACA,WACA,cACA,YACA,QACA,cACA,oBACA,WACA,cACA,UACA,SACA,WACA,YACA,eACA,YACA,cACA,gBACA,gBACA,wBACA,WAGIjB,EAAe,CACnB,iBACA,gBACA,kBACA,qBACA,qBACA,kBACA,wBAKIN,EAA8B,qBAAXC,4GCnDzB,iBACA,gEAEA,OAAsB,aAAqBvF,EAAAA","sources":["../../../../../solarch/plotly/webgl/plotly.js/node_modules/regl-splom/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/src/factory.js","../node_modules/src/react-plotly.js"],"sourcesContent":["'use strict'\n\n\nconst createScatter = require('regl-scatter2d')\nconst pick = require('pick-by-alias')\nconst getBounds = require('array-bounds')\nconst raf = require('raf')\nconst arrRange = require('array-range')\nconst rect = require('parse-rect')\nconst flatten = require('flatten-vertex-data')\n\n\nmodule.exports = SPLOM\n\n\n// @constructor\nfunction SPLOM (regl, options) {\n\tif (!(this instanceof SPLOM)) return new SPLOM(regl, options)\n\n\t// render passes\n\tthis.traces = []\n\n\t// passes for scatter, combined across traces\n\tthis.passes = {}\n\n\tthis.regl = regl\n\n\t// main scatter drawing instance\n\tthis.scatter = createScatter(regl)\n\n\tthis.canvas = this.scatter.canvas\n}\n\n\n// update & draw passes once per frame\nSPLOM.prototype.render = function (...args) {\n\tif (args.length) {\n\t\tthis.update(...args)\n\t}\n\n\tif (this.regl.attributes.preserveDrawingBuffer) return this.draw()\n\n\t// make sure draw is not called more often than once a frame\n\tif (this.dirty) {\n\t\tif (this.planned == null) {\n\t\t\tthis.planned = raf(() => {\n\t\t\t\tthis.draw()\n\t\t\t\tthis.dirty = true\n\t\t\t\tthis.planned = null\n\t\t\t})\n\t\t}\n\t}\n\telse {\n\t\tthis.draw()\n\t\tthis.dirty = true\n\t\traf(() => {\n\t\t\tthis.dirty = false\n\t\t})\n\t}\n\n\treturn this\n}\n\n\n// update passes\nSPLOM.prototype.update = function (...args) {\n\tif (!args.length) return\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tthis.updateItem(i, args[i])\n\t}\n\n\t// remove nulled passes\n\tthis.traces = this.traces.filter(Boolean)\n\n\t// FIXME: update passes independently\n\tlet passes = []\n\tlet offset = 0\n\tfor (let i = 0; i < this.traces.length; i++) {\n\t\tlet trace = this.traces[i]\n\t\tlet tracePasses = this.traces[i].passes\n\t\tfor (let j = 0; j < tracePasses.length; j++) {\n\t\t\tpasses.push(this.passes[tracePasses[j]])\n\t\t}\n\t\t// save offset of passes\n\t\ttrace.passOffset = offset\n\t\toffset += trace.passes.length\n\t}\n\n\tthis.scatter.update(...passes)\n\n\treturn this\n}\n\n\n// update trace by index, not supposed to be called directly\nSPLOM.prototype.updateItem = function (i, options) {\n\tlet { regl } = this\n\n\t// remove pass if null\n\tif (options === null) {\n\t\tthis.traces[i] = null\n\t\treturn this\n\t}\n\n\tif (!options) return this\n\n\tlet o = pick(options, {\n\t\tdata: 'data items columns rows values dimensions samples x',\n\t\tsnap: 'snap cluster',\n\t\tsize: 'sizes size radius',\n\t\tcolor: 'colors color fill fill-color fillColor',\n\t\topacity: 'opacity alpha transparency opaque',\n\t\tborderSize: 'borderSizes borderSize border-size bordersize borderWidth borderWidths border-width borderwidth stroke-width strokeWidth strokewidth outline',\n\t\tborderColor: 'borderColors borderColor bordercolor stroke stroke-color strokeColor',\n\t\tmarker: 'markers marker shape',\n\t\trange: 'range ranges databox dataBox',\n\t\tviewport: 'viewport viewBox viewbox',\n\t\tdomain: 'domain domains area areas',\n\t\tpadding: 'pad padding paddings pads margin margins',\n\t\ttranspose: 'transpose transposed',\n\t\tdiagonal: 'diagonal diag showDiagonal',\n\t\tupper: 'upper up top upperhalf upperHalf showupperhalf showUpper showUpperHalf',\n\t\tlower: 'lower low bottom lowerhalf lowerHalf showlowerhalf showLowerHalf showLower'\n\t})\n\n\t// we provide regl buffer per-trace, since trace data can be changed\n\tlet trace = (this.traces[i] || (this.traces[i] = {\n\t\tid: i,\n\t\tbuffer: regl.buffer({\n\t\t\tusage: 'dynamic',\n\t\t\ttype: 'float',\n\t\t\tdata: new Uint8Array()\n\t\t}),\n\t\tcolor: 'black',\n\t\tmarker: null,\n\t\tsize: 12,\n\t\tborderColor: 'transparent',\n\t\tborderSize: 1,\n\t\tviewport:  rect([regl._gl.drawingBufferWidth, regl._gl.drawingBufferHeight]),\n\t\tpadding: [0, 0, 0, 0],\n\t\topacity: 1,\n\t\tdiagonal: true,\n\t\tupper: true,\n\t\tlower: true\n\t}))\n\n\n\t// save styles\n\tif (o.color != null) {\n\t\ttrace.color = o.color\n\t}\n\tif (o.size != null) {\n\t\ttrace.size = o.size\n\t}\n\tif (o.marker != null) {\n\t\ttrace.marker = o.marker\n\t}\n\tif (o.borderColor != null) {\n\t\ttrace.borderColor = o.borderColor\n\t}\n\tif (o.borderSize != null) {\n\t\ttrace.borderSize = o.borderSize\n\t}\n\tif (o.opacity != null) {\n\t\ttrace.opacity = o.opacity\n\t}\n\tif (o.viewport) {\n\t\ttrace.viewport = rect(o.viewport)\n\t}\n\tif (o.diagonal != null) trace.diagonal = o.diagonal\n\tif (o.upper != null) trace.upper = o.upper\n\tif (o.lower != null) trace.lower = o.lower\n\n\t// put flattened data into buffer\n\tif (o.data) {\n\t\ttrace.buffer(flatten(o.data))\n\t\ttrace.columns = o.data.length\n\t\ttrace.count = o.data[0].length\n\n\t\t// detect bounds per-column\n\t\ttrace.bounds = []\n\n\t\tfor (let i = 0; i < trace.columns; i++) {\n\t\t\ttrace.bounds[i] = getBounds(o.data[i], 1)\n\t\t}\n\t}\n\n\t// add proper range updating markers\n\tlet multirange\n\tif (o.range) {\n\t\ttrace.range = o.range\n\t\tmultirange = trace.range && typeof trace.range[0] !== 'number'\n\t}\n\n\tif (o.domain) {\n\t\ttrace.domain = o.domain\n\t}\n\tlet multipadding = false\n\tif (o.padding != null) {\n\t\t// multiple paddings\n\t\tif (Array.isArray(o.padding) && o.padding.length === trace.columns && typeof o.padding[o.padding.length - 1] === 'number') {\n\t\t\ttrace.padding = o.padding.map(getPad)\n\t\t\tmultipadding = true\n\t\t}\n\t\t// single padding\n\t\telse {\n\t\t\ttrace.padding = getPad(o.padding)\n\t\t}\n\t}\n\n\t// create passes\n\tlet m = trace.columns\n\tlet n = trace.count\n\n\tlet w = trace.viewport.width\n\tlet h = trace.viewport.height\n\tlet left = trace.viewport.x\n\tlet top = trace.viewport.y\n\tlet iw = w / m\n\tlet ih = h / m\n\n\ttrace.passes = []\n\n\tfor (let i = 0; i < m; i++) {\n\t\tfor (let j = 0; j < m; j++) {\n\t\t\tif (!trace.diagonal && j === i) continue\n\t\t\tif (!trace.upper && i > j) continue\n\t\t\tif (!trace.lower && i < j) continue\n\n\t\t\tlet key = passId(trace.id, i, j)\n\n\t\t\tlet pass = this.passes[key] || (this.passes[key] = {})\n\n\t\t\tif (o.data) {\n\t\t\t\tif (o.transpose) {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j, count: n, stride: m},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i, count: n, stride: m}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpass.positions = {\n\t\t\t\t\t\tx: {buffer: trace.buffer, offset: j * n, count: n},\n\t\t\t\t\t\ty: {buffer: trace.buffer, offset: i * n, count: n}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tpass.bounds = getBox(trace.bounds, i, j)\n\t\t\t}\n\n\t\t\tif (o.domain || o.viewport || o.data) {\n\t\t\t\tlet pad = multipadding ? getBox(trace.padding, i, j) : trace.padding\n\t\t\t\tif (trace.domain) {\n\t\t\t\t\tlet [lox, loy, hix, hiy] = getBox(trace.domain, i, j)\n\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + lox * w + pad[0],\n\t\t\t\t\t\ttop + loy * h + pad[1],\n\t\t\t\t\t\tleft + hix * w - pad[2],\n\t\t\t\t\t\ttop + hiy * h - pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\t// consider auto-domain equipartial\n\t\t\t\telse {\n\t\t\t\t\tpass.viewport = [\n\t\t\t\t\t\tleft + j * iw + iw * pad[0],\n\t\t\t\t\t\ttop + i * ih + ih * pad[1],\n\t\t\t\t\t\tleft + (j + 1) * iw - iw * pad[2],\n\t\t\t\t\t\ttop + (i + 1) * ih - ih * pad[3]\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (o.color) pass.color = trace.color\n\t\t\tif (o.size) pass.size = trace.size\n\t\t\tif (o.marker) pass.marker = trace.marker\n\t\t\tif (o.borderSize) pass.borderSize = trace.borderSize\n\t\t\tif (o.borderColor) pass.borderColor = trace.borderColor\n\t\t\tif (o.opacity) pass.opacity = trace.opacity\n\n\t\t\tif (o.range) {\n\t\t\t\tpass.range = multirange ? getBox(trace.range, i, j) : trace.range || pass.bounds\n\t\t\t}\n\n\t\t\ttrace.passes.push(key)\n\t\t}\n\t}\n\n\treturn this\n}\n\n\n// draw all or passed passes\nSPLOM.prototype.draw = function (...args) {\n\tif (!args.length) {\n\t\tthis.scatter.draw()\n\t}\n\telse {\n\t\tlet idx = []\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t// draw(0, 2, 5) - draw traces\n\t\t\tif (typeof args[i] === 'number' ) {\n\t\t\t\tlet { passes, passOffset } = this.traces[args[i]]\n\t\t\t\tidx.push(...arrRange(passOffset, passOffset + passes.length))\n\t\t\t}\n\t\t\t// draw([0, 1, 2 ...], [3, 4, 5]) - draw points\n\t\t\telse if (args[i].length) {\n\t\t\t\tlet els = args[i]\n\t\t\t\tlet { passes, passOffset } = this.traces[i]\n\t\t\t\tpasses = passes.map((passId, i) => {\n\t\t\t\t\tidx[passOffset + i] = els\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tthis.scatter.draw(...idx)\n\t}\n\n\treturn this\n}\n\n\n// dispose resources\nSPLOM.prototype.destroy = function () {\n\tthis.traces.forEach(trace => {\n\t\tif (trace.buffer && trace.buffer.destroy) trace.buffer.destroy()\n\t})\n\tthis.traces = null\n\tthis.passes = null\n\n\tthis.scatter.destroy()\n\n\treturn this\n}\n\n\n// return pass corresponding to trace i- j- square\nfunction passId (trace, i, j) {\n\tlet id = (trace.id != null ? trace.id : trace)\n\tlet n = i\n\tlet m = j\n\tlet key = id << 16 | (n & 0xff) << 8 | m & 0xff\n\n\treturn key\n}\n\n\n// return bounding box corresponding to a pass\nfunction getBox (items, i, j) {\n\tlet ilox, iloy, ihix, ihiy, jlox, jloy, jhix, jhiy\n\tlet iitem = items[i], jitem = items[j]\n\n\tif (iitem.length > 2) {\n\t\tilox = iitem[0]\n\t\tihix = iitem[2]\n\t\tiloy = iitem[1]\n\t\tihiy = iitem[3]\n\t}\n\telse if (iitem.length) {\n\t\tilox = iloy = iitem[0]\n\t\tihix = ihiy = iitem[1]\n\t}\n\telse {\n\t\tilox = iitem.x\n\t\tiloy = iitem.y\n\t\tihix = iitem.x + iitem.width\n\t\tihiy = iitem.y + iitem.height\n\t}\n\n\tif (jitem.length > 2) {\n\t\tjlox = jitem[0]\n\t\tjhix = jitem[2]\n\t\tjloy = jitem[1]\n\t\tjhiy = jitem[3]\n\t}\n\telse if (jitem.length) {\n\t\tjlox = jloy = jitem[0]\n\t\tjhix = jhiy = jitem[1]\n\t}\n\telse {\n\t\tjlox = jitem.x\n\t\tjloy = jitem.y\n\t\tjhix = jitem.x + jitem.width\n\t\tjhiy = jitem.y + jitem.height\n\t}\n\n\treturn [ jlox, iloy, jhix, ihiy ]\n}\n\n\nfunction getPad (arg) {\n\tif (typeof arg === 'number') return [arg, arg, arg, arg]\n\telse if (arg.length === 2) return [arg[0], arg[1], arg[0], arg[1]]\n\telse {\n\t\tlet box = rect(arg)\n\t\treturn [box.x, box.y, box.x + box.width, box.y + box.height]\n\t}\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// The naming convention is:\n//   - events are attached as `'plotly_' + eventName.toLowerCase()`\n//   - react props are `'on' + eventName`\nconst eventNames = [\n  'AfterExport',\n  'AfterPlot',\n  'Animated',\n  'AnimatingFrame',\n  'AnimationInterrupted',\n  'AutoSize',\n  'BeforeExport',\n  'BeforeHover',\n  'ButtonClicked',\n  'Click',\n  'ClickAnnotation',\n  'Deselect',\n  'DoubleClick',\n  'Framework',\n  'Hover',\n  'LegendClick',\n  'LegendDoubleClick',\n  'Relayout',\n  'Relayouting',\n  'Restyle',\n  'Redraw',\n  'Selected',\n  'Selecting',\n  'SliderChange',\n  'SliderEnd',\n  'SliderStart',\n  'SunburstClick',\n  'Transitioning',\n  'TransitionInterrupted',\n  'Unhover',\n];\n\nconst updateEvents = [\n  'plotly_restyle',\n  'plotly_redraw',\n  'plotly_relayout',\n  'plotly_relayouting',\n  'plotly_doubleclick',\n  'plotly_animated',\n  'plotly_sunburstclick',\n];\n\n// Check if a window is available since SSR (server-side rendering)\n// breaks unnecessarily if you try to use it server-side.\nconst isBrowser = typeof window !== 'undefined';\n\nexport default function plotComponentFactory(Plotly) {\n  class PlotlyComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.p = Promise.resolve();\n      this.resizeHandler = null;\n      this.handlers = {};\n\n      this.syncWindowResize = this.syncWindowResize.bind(this);\n      this.syncEventHandlers = this.syncEventHandlers.bind(this);\n      this.attachUpdateEvents = this.attachUpdateEvents.bind(this);\n      this.getRef = this.getRef.bind(this);\n      this.handleUpdate = this.handleUpdate.bind(this);\n      this.figureCallback = this.figureCallback.bind(this);\n      this.updatePlotly = this.updatePlotly.bind(this);\n    }\n\n    updatePlotly(shouldInvokeResizeHandler, figureCallbackFunction, shouldAttachUpdateEvents) {\n      this.p = this.p\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          if (!this.el) {\n            throw new Error('Missing element reference');\n          }\n          // eslint-disable-next-line consistent-return\n          return Plotly.react(this.el, {\n            data: this.props.data,\n            layout: this.props.layout,\n            config: this.props.config,\n            frames: this.props.frames,\n          });\n        })\n        .then(() => {\n          if (this.unmounting) {\n            return;\n          }\n          this.syncWindowResize(shouldInvokeResizeHandler);\n          this.syncEventHandlers();\n          this.figureCallback(figureCallbackFunction);\n          if (shouldAttachUpdateEvents) {\n            this.attachUpdateEvents();\n          }\n        })\n        .catch((err) => {\n          if (this.props.onError) {\n            this.props.onError(err);\n          }\n        });\n    }\n\n    componentDidMount() {\n      this.unmounting = false;\n\n      this.updatePlotly(true, this.props.onInitialized, true);\n    }\n\n    componentDidUpdate(prevProps) {\n      this.unmounting = false;\n\n      // frames *always* changes identity so fall back to check length only :(\n      const numPrevFrames =\n        prevProps.frames && prevProps.frames.length ? prevProps.frames.length : 0;\n      const numNextFrames =\n        this.props.frames && this.props.frames.length ? this.props.frames.length : 0;\n\n      const figureChanged = !(\n        prevProps.layout === this.props.layout &&\n        prevProps.data === this.props.data &&\n        prevProps.config === this.props.config &&\n        numNextFrames === numPrevFrames\n      );\n      const revisionDefined = prevProps.revision !== void 0;\n      const revisionChanged = prevProps.revision !== this.props.revision;\n\n      if (!figureChanged && (!revisionDefined || (revisionDefined && !revisionChanged))) {\n        return;\n      }\n\n      this.updatePlotly(false, this.props.onUpdate, false);\n    }\n\n    componentWillUnmount() {\n      this.unmounting = true;\n\n      this.figureCallback(this.props.onPurge);\n\n      if (this.resizeHandler && isBrowser) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n\n      this.removeUpdateEvents();\n\n      Plotly.purge(this.el);\n    }\n\n    attachUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.on(updateEvent, this.handleUpdate);\n      });\n    }\n\n    removeUpdateEvents() {\n      if (!this.el || !this.el.removeListener) {\n        return;\n      }\n\n      updateEvents.forEach((updateEvent) => {\n        this.el.removeListener(updateEvent, this.handleUpdate);\n      });\n    }\n\n    handleUpdate() {\n      this.figureCallback(this.props.onUpdate);\n    }\n\n    figureCallback(callback) {\n      if (typeof callback === 'function') {\n        const {data, layout} = this.el;\n        const frames = this.el._transitionData ? this.el._transitionData._frames : null;\n        const figure = {data, layout, frames};\n        callback(figure, this.el);\n      }\n    }\n\n    syncWindowResize(invoke) {\n      if (!isBrowser) {\n        return;\n      }\n\n      if (this.props.useResizeHandler && !this.resizeHandler) {\n        this.resizeHandler = () => Plotly.Plots.resize(this.el);\n        window.addEventListener('resize', this.resizeHandler);\n        if (invoke) {\n          this.resizeHandler();\n        }\n      } else if (!this.props.useResizeHandler && this.resizeHandler) {\n        window.removeEventListener('resize', this.resizeHandler);\n        this.resizeHandler = null;\n      }\n    }\n\n    getRef(el) {\n      this.el = el;\n\n      if (this.props.debug && isBrowser) {\n        window.gd = this.el;\n      }\n    }\n\n    // Attach and remove event handlers as they're added or removed from props:\n    syncEventHandlers() {\n      eventNames.forEach((eventName) => {\n        const prop = this.props['on' + eventName];\n        const handler = this.handlers[eventName];\n        const hasHandler = Boolean(handler);\n\n        if (prop && !hasHandler) {\n          this.addEventHandler(eventName, prop);\n        } else if (!prop && hasHandler) {\n          // Needs to be removed:\n          this.removeEventHandler(eventName);\n        } else if (prop && hasHandler && prop !== handler) {\n          // replace the handler\n          this.removeEventHandler(eventName);\n          this.addEventHandler(eventName, prop);\n        }\n      });\n    }\n\n    addEventHandler(eventName, prop) {\n      this.handlers[eventName] = prop;\n      this.el.on(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n    }\n\n    removeEventHandler(eventName) {\n      this.el.removeListener(this.getPlotlyEventName(eventName), this.handlers[eventName]);\n      delete this.handlers[eventName];\n    }\n\n    getPlotlyEventName(eventName) {\n      return 'plotly_' + eventName.toLowerCase();\n    }\n\n    render() {\n      return (\n        <div\n          id={this.props.divId}\n          style={this.props.style}\n          ref={this.getRef}\n          className={this.props.className}\n        />\n      );\n    }\n  }\n\n  PlotlyComponent.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.object),\n    config: PropTypes.object,\n    layout: PropTypes.object,\n    frames: PropTypes.arrayOf(PropTypes.object),\n    revision: PropTypes.number,\n    onInitialized: PropTypes.func,\n    onPurge: PropTypes.func,\n    onError: PropTypes.func,\n    onUpdate: PropTypes.func,\n    debug: PropTypes.bool,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    useResizeHandler: PropTypes.bool,\n    divId: PropTypes.string,\n  };\n\n  eventNames.forEach((eventName) => {\n    PlotlyComponent.propTypes['on' + eventName] = PropTypes.func;\n  });\n\n  PlotlyComponent.defaultProps = {\n    debug: false,\n    useResizeHandler: false,\n    data: [],\n    style: {position: 'relative', display: 'inline-block'},\n  };\n\n  return PlotlyComponent;\n}\n","import plotComponentFactory from './factory';\nimport Plotly from 'plotly.js/dist/plotly';\n\nconst PlotComponent = plotComponentFactory(Plotly);\n\nexport default PlotComponent;\n"],"names":["const","__webpack_modules__","__unused_webpack_module","Lib","__webpack_require__","let","module","__unused_webpack_exports","exports","i","passes","Plotly","factory","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","PlotlyComponent","_inherits","_classCallCheck","_this","p","Promise","resolve","resizeHandler","handlers","syncWindowResize","bind","syncEventHandlers","attachUpdateEvents","getRef","handleUpdate","figureCallback","updatePlotly","_createClass","key","value","shouldInvokeResizeHandler","figureCallbackFunction","shouldAttachUpdateEvents","this","then","_this2","unmounting","el","react","data","layout","config","frames","onError","onInitialized","prevProps","numPrevFrames","length","numNextFrames","figureChanged","revisionDefined","revision","revisionChanged","onUpdate","onPurge","isBrowser","window","removeEventListener","removeUpdateEvents","purge","removeListener","updateEvents","forEach","updateEvent","_this3","on","_this4","callback","_transitionData","_frames","invoke","useResizeHandler","Plots","resize","_this5","addEventListener","debug","gd","eventNames","eventName","prop","_this6","handler","hasHandler","Boolean","addEventHandler","removeEventHandler","getPlotlyEventName","toLowerCase","_react","id","divId","style","ref","className","Component","propTypes","defaultProps","position","display"],"sourceRoot":""}